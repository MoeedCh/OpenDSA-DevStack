user    nginx;
worker_processes    1;

error_log   /var/log/nginx/error.log warn;
pid         /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include         /etc/nginx/mime.types;
    default_type    application/octet-stream;
    log_format  main    '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log   main;
    sendfile    on;
    #tcp_nopush on;
    keepalive_timeout   65;
    #gzip on;
    # first we declare our upstream server, which is rails
    upstream rails_server {
        # docker will automatically resolve this to the correct address
        # because we use the same name as the service: "opendsa-lti"
        server opendsa-lti:80;
    }
    # now we declare our main server
    server {
        listen 80;
        #location /static/ {
        #    alias /opendsa-lti/public/assets/;
        #}
        location / {
            proxy_pass http://rails_server;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            proxy_redirect off;
        }
    }
    server {
        listen 443 ssl;
        server_name localhost;
        ssl_certificate /etc/nginx/certs/server.crt;
        ssl_certificate_key /etc/nginx/certs/server.key;
        location / {
            proxy_pass http://rails_server;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            proxy_redirect off;
        }
    }
}